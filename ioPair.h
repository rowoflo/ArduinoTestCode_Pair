/*
 -------------------------------------------------------------------------------
 ioPair.h
 Pair Project
 
 This template class add IO methods to the Pair class. This is done because the
 Pair class is meant to be implemented on Arduino, which can't have the IO
 methods.
 
 Initially created by Rowland O'Flaherty on 8/16/10.
 -------------------------------------------------------------------------------
 */

#ifndef _ioPair_h_
#define _ioPair_h_

//------------------------------------------------------------------------------
// Includes
//------------------------------------------------------------------------------
#include "../../libraryTemplateClasses/Pair/Pair.h"
#include <iostream>

template <typename T1, typename T2>
class ioPair : public Pair<T1, T2>
{
	//--------------------------------------------------------------------------
	// Friends
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Friend Overloaded Operators
	//--------------------------------------------------------------------------
	template <typename U1, typename U2>
	friend std::ostream& operator<<(std::ostream& ostreamObj, const ioPair<U1, U2>& rhsObj);
	
public:
	//--------------------------------------------------------------------------
	// Constants, Enums, and Types
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Lifecycle
	//--------------------------------------------------------------------------
	
	// Constructors
	ioPair();
	ioPair(T1 first, T2 second);
	
	
	// Destructor
	virtual ~ioPair();
	
	// Copy constructor
	
	// Assignment operator
	
	
	//--------------------------------------------------------------------------
	// Overloaded Operators
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Public Member Functions
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Public Member Variables
	//--------------------------------------------------------------------------
	
	
	
protected:
	//--------------------------------------------------------------------------
	// Protected Member Functions
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Protected Member Variables
	//--------------------------------------------------------------------------
	
	
	
private:
	//--------------------------------------------------------------------------
	// Lifecycle
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Private Member Functions
	//--------------------------------------------------------------------------
	
	
	//--------------------------------------------------------------------------
	// Private Member Variables
	//--------------------------------------------------------------------------
	
	
	
};

#include "ioPair.cpp"

#endif